openapi: 3.0.0
info:
  title: AI-Based IT Training System API
  version: 1.0.0
  description: API documentation for the AI-Based IT Training System

servers:
  - url: http://localhost:3000/api
    description: Development server
  - url: https://api.training-system.com/api
    description: Production server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [student, instructor, admin]
        createdAt:
          type: string
          format: date-time

    Course:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        instructorId:
          type: string
          format: uuid
        status:
          type: string
          enum: [draft, pending, approved, rejected]
        createdAt:
          type: string
          format: date-time

    Assessment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        courseId:
          type: string
          format: uuid
        title:
          type: string
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
        passingScore:
          type: integer
        timeLimit:
          type: integer
          description: Time limit in minutes

    Question:
      type: object
      properties:
        id:
          type: string
          format: uuid
        text:
          type: string
        type:
          type: string
          enum: [multiple_choice, true_false, short_answer]
        options:
          type: array
          items:
            type: string
        correctAnswer:
          type: string

paths:
  /auth/login:
    post:
      summary: User login
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'

  /courses:
    get:
      summary: Get all courses
      tags: [Courses]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'

    post:
      summary: Create a new course
      tags: [Courses]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        '201':
          description: Course created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'

  /assessments:
    get:
      summary: Get all assessments
      tags: [Assessments]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of assessments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assessment'

    post:
      summary: Create a new assessment
      tags: [Assessments]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assessment'
      responses:
        '201':
          description: Assessment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assessment' 